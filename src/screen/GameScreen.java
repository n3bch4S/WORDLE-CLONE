package screen;

import gameControl.*;
import javax.swing.*;
import java.awt.event.*;
import systemManager.*;

public class GameScreen extends javax.swing.JFrame {

    public static final int GAP_SIZE = 3;
    public static final int BIG_SIZE = 64;
    public static final int SMALL_SIZE = 44;
    public static final int MAX_LETTERS = 8;
    public static final int MAX_ATTEMPS = 9;
    public static final int MIN_LETTERS = 1;
    public static final int MIN_ATTEMPS = 1;

    private JLabel[][] tiles;
    private JProgressBar[] disBar;
    private JLabel[] numTry;
    private Action typeAction;
    private Action delAction;
    private Action enterAction;
    private ClassicMode mode;
    private Score score;

    /**
     * Creates new form MC
     */
    public GameScreen(int numOfLetters, int numOfAttemp) {
        initComponents();
        initButton();
        setVisible(true);
        createTiles(numOfLetters, numOfAttemp);
        createKeyInteract();
        createNumTry();
        createDisBar();

        JLabel[] keypad = {del, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, enter};

        warning.setVisible(false);
        confirmResetPanel.setVisible(false);
        statPanel.setVisible(false);
        photoFrame.setVisible(false);
        score = new Score();
        mode = new ClassicMode(tiles, keypad, warning, photoFrame, statPanel, score);
        updateScore();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        photoFrame = new javax.swing.JLabel();
        confirmResetPanel = new javax.swing.JPanel();
        areYouSure = new javax.swing.JLabel();
        yourStat = new javax.swing.JLabel();
        yes = new javax.swing.JLabel();
        cancel = new javax.swing.JLabel();
        statPanel = new javax.swing.JPanel();
        playAgain = new javax.swing.JLabel();
        resume = new javax.swing.JLabel();
        statistic = new javax.swing.JLabel();
        played = new javax.swing.JLabel();
        playedValue = new javax.swing.JLabel();
        winPercent = new javax.swing.JLabel();
        winPercentValue = new javax.swing.JLabel();
        current = new javax.swing.JLabel();
        currentStreakValue = new javax.swing.JLabel();
        streak = new javax.swing.JLabel();
        max = new javax.swing.JLabel();
        maxStreakValue = new javax.swing.JLabel();
        streak2 = new javax.swing.JLabel();
        guessDis = new javax.swing.JLabel();
        resetStat = new javax.swing.JLabel();
        tilePanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        warning = new javax.swing.JLabel();
        typePanel = new javax.swing.JPanel();
        q = new javax.swing.JLabel();
        w = new javax.swing.JLabel();
        e = new javax.swing.JLabel();
        r = new javax.swing.JLabel();
        t = new javax.swing.JLabel();
        y = new javax.swing.JLabel();
        u = new javax.swing.JLabel();
        i = new javax.swing.JLabel();
        o = new javax.swing.JLabel();
        p = new javax.swing.JLabel();
        a = new javax.swing.JLabel();
        s = new javax.swing.JLabel();
        d = new javax.swing.JLabel();
        f = new javax.swing.JLabel();
        g = new javax.swing.JLabel();
        h = new javax.swing.JLabel();
        j = new javax.swing.JLabel();
        k = new javax.swing.JLabel();
        l = new javax.swing.JLabel();
        z = new javax.swing.JLabel();
        x = new javax.swing.JLabel();
        c = new javax.swing.JLabel();
        v = new javax.swing.JLabel();
        b = new javax.swing.JLabel();
        n = new javax.swing.JLabel();
        m = new javax.swing.JLabel();
        enter = new javax.swing.JLabel();
        del = new javax.swing.JLabel();
        topPanel = new javax.swing.JPanel();
        back = new javax.swing.JLabel();
        wordle = new javax.swing.JLabel();
        stat = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Wordle");
        setLocation(new java.awt.Point(720, 0));
        setResizable(false);
        setSize(new java.awt.Dimension(480, 720));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        photoFrame.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        photoFrame.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        photoFrame.setPreferredSize(new java.awt.Dimension(100, 100));
        photoFrame.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                photoFrameMouseReleased(evt);
            }
        });
        getContentPane().add(photoFrame, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 400, -1, -1));

        confirmResetPanel.setBackground(new java.awt.Color(233, 233, 233));
        confirmResetPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 5, true));
        confirmResetPanel.setPreferredSize(new java.awt.Dimension(200, 150));
        confirmResetPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        areYouSure.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        areYouSure.setForeground(new java.awt.Color(0, 0, 0));
        areYouSure.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        areYouSure.setText("Are you sure?");
        areYouSure.setPreferredSize(new java.awt.Dimension(200, 30));
        confirmResetPanel.add(areYouSure, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, -1, -1));

        yourStat.setForeground(new java.awt.Color(0, 0, 0));
        yourStat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        yourStat.setText("Your stat will be gone forever.");
        yourStat.setPreferredSize(new java.awt.Dimension(200, 30));
        confirmResetPanel.add(yourStat, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, -1, -1));

        yes.setBackground(new java.awt.Color(205, 205, 205));
        yes.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        yes.setForeground(new java.awt.Color(0, 0, 0));
        yes.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        yes.setText("Yes");
        yes.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        yes.setOpaque(true);
        yes.setPreferredSize(new java.awt.Dimension(50, 25));
        yes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                yesMouseReleased(evt);
            }
        });
        confirmResetPanel.add(yes, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, -1, -1));

        cancel.setBackground(new java.awt.Color(133, 178, 255));
        cancel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cancel.setForeground(new java.awt.Color(0, 0, 0));
        cancel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cancel.setText("Cancel");
        cancel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancel.setOpaque(true);
        cancel.setPreferredSize(new java.awt.Dimension(60, 25));
        cancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                cancelMouseReleased(evt);
            }
        });
        confirmResetPanel.add(cancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 100, -1, -1));

        getContentPane().add(confirmResetPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 285, -1, -1));

        statPanel.setBackground(new java.awt.Color(255, 255, 255));
        statPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));
        statPanel.setPreferredSize(new java.awt.Dimension(300, 480));
        statPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        playAgain.setBackground(new java.awt.Color(204, 204, 204));
        playAgain.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 14)); // NOI18N
        playAgain.setForeground(new java.awt.Color(0, 0, 0));
        playAgain.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        playAgain.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        playAgain.setPreferredSize(new java.awt.Dimension(50, 50));
        playAgain.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                playAgainMouseReleased(evt);
            }
        });
        statPanel.add(playAgain, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 400, -1, -1));

        resume.setBackground(new java.awt.Color(204, 204, 204));
        resume.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        resume.setForeground(new java.awt.Color(102, 102, 102));
        resume.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        resume.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        resume.setPreferredSize(new java.awt.Dimension(20, 20));
        resume.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                resumeMouseReleased(evt);
            }
        });
        statPanel.add(resume, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 20, -1, -1));

        statistic.setBackground(new java.awt.Color(204, 204, 204));
        statistic.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 24)); // NOI18N
        statistic.setForeground(new java.awt.Color(0, 0, 0));
        statistic.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        statistic.setText("STATISTICS");
        statPanel.add(statistic, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 20, -1, -1));

        played.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        played.setForeground(new java.awt.Color(0, 0, 0));
        played.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        played.setText("Played");
        played.setPreferredSize(new java.awt.Dimension(50, 50));
        statPanel.add(played, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, -1, -1));

        playedValue.setFont(new java.awt.Font("SansSerif", 0, 26)); // NOI18N
        playedValue.setForeground(new java.awt.Color(0, 0, 0));
        playedValue.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        playedValue.setText("26");
        playedValue.setPreferredSize(new java.awt.Dimension(50, 50));
        statPanel.add(playedValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, -1, -1));

        winPercent.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        winPercent.setForeground(new java.awt.Color(0, 0, 0));
        winPercent.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        winPercent.setText("Win %");
        winPercent.setPreferredSize(new java.awt.Dimension(50, 50));
        statPanel.add(winPercent, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 80, -1, -1));

        winPercentValue.setFont(new java.awt.Font("SansSerif", 0, 26)); // NOI18N
        winPercentValue.setForeground(new java.awt.Color(0, 0, 0));
        winPercentValue.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        winPercentValue.setText("87");
        winPercentValue.setPreferredSize(new java.awt.Dimension(50, 50));
        statPanel.add(winPercentValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 50, -1, -1));

        current.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        current.setForeground(new java.awt.Color(0, 0, 0));
        current.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        current.setText("Current");
        current.setPreferredSize(new java.awt.Dimension(50, 50));
        statPanel.add(current, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 80, -1, -1));

        currentStreakValue.setFont(new java.awt.Font("SansSerif", 0, 26)); // NOI18N
        currentStreakValue.setForeground(new java.awt.Color(0, 0, 0));
        currentStreakValue.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        currentStreakValue.setText("4");
        currentStreakValue.setPreferredSize(new java.awt.Dimension(50, 50));
        statPanel.add(currentStreakValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 50, -1, -1));

        streak.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        streak.setForeground(new java.awt.Color(0, 0, 0));
        streak.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        streak.setText("Streak");
        streak.setPreferredSize(new java.awt.Dimension(50, 50));
        statPanel.add(streak, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 100, -1, -1));

        max.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        max.setForeground(new java.awt.Color(0, 0, 0));
        max.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        max.setText("Max");
        max.setPreferredSize(new java.awt.Dimension(50, 50));
        statPanel.add(max, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 80, -1, -1));

        maxStreakValue.setFont(new java.awt.Font("SansSerif", 0, 26)); // NOI18N
        maxStreakValue.setForeground(new java.awt.Color(0, 0, 0));
        maxStreakValue.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        maxStreakValue.setText("7");
        maxStreakValue.setPreferredSize(new java.awt.Dimension(50, 50));
        statPanel.add(maxStreakValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 50, -1, -1));

        streak2.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        streak2.setForeground(new java.awt.Color(0, 0, 0));
        streak2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        streak2.setText("Streak");
        streak2.setPreferredSize(new java.awt.Dimension(50, 50));
        statPanel.add(streak2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 100, -1, -1));

        guessDis.setBackground(new java.awt.Color(204, 204, 204));
        guessDis.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 18)); // NOI18N
        guessDis.setForeground(new java.awt.Color(0, 0, 0));
        guessDis.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        guessDis.setText("GUESS DISTRIBUTION");
        statPanel.add(guessDis, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 160, -1, -1));

        resetStat.setBackground(new java.awt.Color(204, 204, 204));
        resetStat.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        resetStat.setForeground(new java.awt.Color(0, 0, 0));
        resetStat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        resetStat.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        resetStat.setPreferredSize(new java.awt.Dimension(50, 50));
        resetStat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                resetStatMouseReleased(evt);
            }
        });
        statPanel.add(resetStat, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 400, -1, -1));

        getContentPane().add(statPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 120, -1, -1));

        tilePanel.setBackground(new java.awt.Color(255, 255, 255));
        tilePanel.setPreferredSize(new java.awt.Dimension(480, 480));
        tilePanel.setLayout(null);

        jLabel1.setForeground(new java.awt.Color(246, 246, 246));
        jLabel1.setText("jLabel1");
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel1MouseReleased(evt);
            }
        });
        tilePanel.add(jLabel1);
        jLabel1.setBounds(470, 140, 37, 16);

        warning.setBackground(new java.awt.Color(194, 194, 194));
        warning.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 24)); // NOI18N
        warning.setForeground(new java.awt.Color(255, 255, 255));
        warning.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        warning.setText("Not in list");
        warning.setOpaque(true);
        warning.setPreferredSize(new java.awt.Dimension(120, 30));
        tilePanel.add(warning);
        warning.setBounds(70, 10, 350, 30);

        getContentPane().add(tilePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, -1, -1));

        typePanel.setBackground(new java.awt.Color(255, 255, 255));
        typePanel.setPreferredSize(new java.awt.Dimension(480, 190));

        q.setBackground(new java.awt.Color(204, 204, 204));
        q.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        q.setForeground(new java.awt.Color(0, 0, 0));
        q.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q.setText("Q");
        q.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        q.setOpaque(true);
        q.setPreferredSize(new java.awt.Dimension(30, 40));
        q.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                qMouseReleased(evt);
            }
        });

        w.setBackground(new java.awt.Color(204, 204, 204));
        w.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        w.setForeground(new java.awt.Color(0, 0, 0));
        w.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        w.setText("W");
        w.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        w.setOpaque(true);
        w.setPreferredSize(new java.awt.Dimension(30, 40));
        w.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                wMouseReleased(evt);
            }
        });

        e.setBackground(new java.awt.Color(204, 204, 204));
        e.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        e.setForeground(new java.awt.Color(0, 0, 0));
        e.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        e.setText("E");
        e.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        e.setOpaque(true);
        e.setPreferredSize(new java.awt.Dimension(30, 40));
        e.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                eMouseReleased(evt);
            }
        });

        r.setBackground(new java.awt.Color(204, 204, 204));
        r.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        r.setForeground(new java.awt.Color(0, 0, 0));
        r.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        r.setText("R");
        r.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        r.setOpaque(true);
        r.setPreferredSize(new java.awt.Dimension(30, 40));
        r.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                rMouseReleased(evt);
            }
        });

        t.setBackground(new java.awt.Color(204, 204, 204));
        t.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        t.setForeground(new java.awt.Color(0, 0, 0));
        t.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        t.setText("T");
        t.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        t.setOpaque(true);
        t.setPreferredSize(new java.awt.Dimension(30, 40));
        t.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tMouseReleased(evt);
            }
        });

        y.setBackground(new java.awt.Color(204, 204, 204));
        y.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        y.setForeground(new java.awt.Color(0, 0, 0));
        y.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        y.setText("Y");
        y.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        y.setOpaque(true);
        y.setPreferredSize(new java.awt.Dimension(30, 40));
        y.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                yMouseReleased(evt);
            }
        });

        u.setBackground(new java.awt.Color(204, 204, 204));
        u.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        u.setForeground(new java.awt.Color(0, 0, 0));
        u.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        u.setText("U");
        u.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        u.setOpaque(true);
        u.setPreferredSize(new java.awt.Dimension(30, 40));
        u.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                uMouseReleased(evt);
            }
        });

        i.setBackground(new java.awt.Color(204, 204, 204));
        i.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        i.setForeground(new java.awt.Color(0, 0, 0));
        i.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        i.setText("I");
        i.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        i.setOpaque(true);
        i.setPreferredSize(new java.awt.Dimension(30, 40));
        i.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                iMouseReleased(evt);
            }
        });

        o.setBackground(new java.awt.Color(204, 204, 204));
        o.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        o.setForeground(new java.awt.Color(0, 0, 0));
        o.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        o.setText("O");
        o.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        o.setOpaque(true);
        o.setPreferredSize(new java.awt.Dimension(30, 40));
        o.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                oMouseReleased(evt);
            }
        });

        p.setBackground(new java.awt.Color(204, 204, 204));
        p.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        p.setForeground(new java.awt.Color(0, 0, 0));
        p.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        p.setText("P");
        p.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        p.setOpaque(true);
        p.setPreferredSize(new java.awt.Dimension(30, 40));
        p.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                pMouseReleased(evt);
            }
        });

        a.setBackground(new java.awt.Color(204, 204, 204));
        a.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        a.setForeground(new java.awt.Color(0, 0, 0));
        a.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        a.setText("A");
        a.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        a.setOpaque(true);
        a.setPreferredSize(new java.awt.Dimension(30, 40));
        a.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                aMouseReleased(evt);
            }
        });

        s.setBackground(new java.awt.Color(204, 204, 204));
        s.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        s.setForeground(new java.awt.Color(0, 0, 0));
        s.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        s.setText("S");
        s.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        s.setOpaque(true);
        s.setPreferredSize(new java.awt.Dimension(30, 40));
        s.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                sMouseReleased(evt);
            }
        });

        d.setBackground(new java.awt.Color(204, 204, 204));
        d.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        d.setForeground(new java.awt.Color(0, 0, 0));
        d.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        d.setText("D");
        d.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        d.setOpaque(true);
        d.setPreferredSize(new java.awt.Dimension(30, 40));
        d.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                dMouseReleased(evt);
            }
        });

        f.setBackground(new java.awt.Color(204, 204, 204));
        f.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        f.setForeground(new java.awt.Color(0, 0, 0));
        f.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        f.setText("F");
        f.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        f.setOpaque(true);
        f.setPreferredSize(new java.awt.Dimension(30, 40));
        f.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                fMouseReleased(evt);
            }
        });

        g.setBackground(new java.awt.Color(204, 204, 204));
        g.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        g.setForeground(new java.awt.Color(0, 0, 0));
        g.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        g.setText("G");
        g.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        g.setOpaque(true);
        g.setPreferredSize(new java.awt.Dimension(30, 40));
        g.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                gMouseReleased(evt);
            }
        });

        h.setBackground(new java.awt.Color(204, 204, 204));
        h.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        h.setForeground(new java.awt.Color(0, 0, 0));
        h.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        h.setText("H");
        h.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        h.setOpaque(true);
        h.setPreferredSize(new java.awt.Dimension(30, 40));
        h.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                hMouseReleased(evt);
            }
        });

        j.setBackground(new java.awt.Color(204, 204, 204));
        j.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        j.setForeground(new java.awt.Color(0, 0, 0));
        j.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        j.setText("J");
        j.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        j.setOpaque(true);
        j.setPreferredSize(new java.awt.Dimension(30, 40));
        j.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jMouseReleased(evt);
            }
        });

        k.setBackground(new java.awt.Color(204, 204, 204));
        k.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        k.setForeground(new java.awt.Color(0, 0, 0));
        k.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        k.setText("K");
        k.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        k.setOpaque(true);
        k.setPreferredSize(new java.awt.Dimension(30, 40));
        k.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                kMouseReleased(evt);
            }
        });

        l.setBackground(new java.awt.Color(204, 204, 204));
        l.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        l.setForeground(new java.awt.Color(0, 0, 0));
        l.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l.setText("L");
        l.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        l.setOpaque(true);
        l.setPreferredSize(new java.awt.Dimension(30, 40));
        l.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                lMouseReleased(evt);
            }
        });

        z.setBackground(new java.awt.Color(204, 204, 204));
        z.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        z.setForeground(new java.awt.Color(0, 0, 0));
        z.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        z.setText("Z");
        z.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        z.setOpaque(true);
        z.setPreferredSize(new java.awt.Dimension(30, 40));
        z.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                zMouseReleased(evt);
            }
        });

        x.setBackground(new java.awt.Color(204, 204, 204));
        x.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        x.setForeground(new java.awt.Color(0, 0, 0));
        x.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        x.setText("X");
        x.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        x.setOpaque(true);
        x.setPreferredSize(new java.awt.Dimension(30, 40));
        x.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                xMouseReleased(evt);
            }
        });

        c.setBackground(new java.awt.Color(204, 204, 204));
        c.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        c.setForeground(new java.awt.Color(0, 0, 0));
        c.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c.setText("C");
        c.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        c.setOpaque(true);
        c.setPreferredSize(new java.awt.Dimension(30, 40));
        c.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                cMouseReleased(evt);
            }
        });

        v.setBackground(new java.awt.Color(204, 204, 204));
        v.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        v.setForeground(new java.awt.Color(0, 0, 0));
        v.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        v.setText("V");
        v.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        v.setOpaque(true);
        v.setPreferredSize(new java.awt.Dimension(30, 40));
        v.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                vMouseReleased(evt);
            }
        });

        b.setBackground(new java.awt.Color(204, 204, 204));
        b.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        b.setForeground(new java.awt.Color(0, 0, 0));
        b.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        b.setText("B");
        b.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        b.setOpaque(true);
        b.setPreferredSize(new java.awt.Dimension(30, 40));
        b.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                bMouseReleased(evt);
            }
        });

        n.setBackground(new java.awt.Color(204, 204, 204));
        n.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        n.setForeground(new java.awt.Color(0, 0, 0));
        n.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        n.setText("N");
        n.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        n.setOpaque(true);
        n.setPreferredSize(new java.awt.Dimension(30, 40));
        n.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                nMouseReleased(evt);
            }
        });

        m.setBackground(new java.awt.Color(204, 204, 204));
        m.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        m.setForeground(new java.awt.Color(0, 0, 0));
        m.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        m.setText("M");
        m.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        m.setOpaque(true);
        m.setPreferredSize(new java.awt.Dimension(30, 40));
        m.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                mMouseReleased(evt);
            }
        });

        enter.setBackground(new java.awt.Color(204, 204, 204));
        enter.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        enter.setForeground(new java.awt.Color(0, 0, 0));
        enter.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        enter.setText("Enter");
        enter.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        enter.setOpaque(true);
        enter.setPreferredSize(new java.awt.Dimension(60, 40));
        enter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                enterMouseReleased(evt);
            }
        });

        del.setBackground(new java.awt.Color(204, 204, 204));
        del.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        del.setForeground(new java.awt.Color(0, 0, 0));
        del.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        del.setText("<-");
        del.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        del.setOpaque(true);
        del.setPreferredSize(new java.awt.Dimension(60, 40));
        del.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                delMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout typePanelLayout = new javax.swing.GroupLayout(typePanel);
        typePanel.setLayout(typePanelLayout);
        typePanelLayout.setHorizontalGroup(
            typePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(typePanelLayout.createSequentialGroup()
                .addGroup(typePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(typePanelLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(enter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(z, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(x, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(c, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(v, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(n, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(m, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(del, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(typePanelLayout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addGroup(typePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(typePanelLayout.createSequentialGroup()
                                .addComponent(q, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(w, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(e, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(r, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(t, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(y, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(u, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(i, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(o, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(p, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(typePanelLayout.createSequentialGroup()
                                .addComponent(a, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(s, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(d, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(f, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(g, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(h, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(j, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(k, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(l, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(15, 15, 15)))))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        typePanelLayout.setVerticalGroup(
            typePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(typePanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(typePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(q, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(w, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(e, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(y, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(u, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(i, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(o, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(typePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(a, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(s, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(d, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(f, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(g, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(h, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(j, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(k, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(typePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(z, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(x, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(c, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(v, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(n, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(m, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(del, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        q.getAccessibleContext().setAccessibleName("q");
        w.getAccessibleContext().setAccessibleName("w");
        e.getAccessibleContext().setAccessibleName("e");
        r.getAccessibleContext().setAccessibleName("r");
        t.getAccessibleContext().setAccessibleName("t");
        y.getAccessibleContext().setAccessibleName("y");
        u.getAccessibleContext().setAccessibleName("u");
        i.getAccessibleContext().setAccessibleName("i");
        o.getAccessibleContext().setAccessibleName("o");
        p.getAccessibleContext().setAccessibleName("p");
        a.getAccessibleContext().setAccessibleName("a");
        s.getAccessibleContext().setAccessibleName("s");
        d.getAccessibleContext().setAccessibleName("d");
        f.getAccessibleContext().setAccessibleName("f");
        g.getAccessibleContext().setAccessibleName("g");
        h.getAccessibleContext().setAccessibleName("h");
        j.getAccessibleContext().setAccessibleName("j");
        k.getAccessibleContext().setAccessibleName("k");
        l.getAccessibleContext().setAccessibleName("l");
        z.getAccessibleContext().setAccessibleName("z");
        x.getAccessibleContext().setAccessibleName("x");
        c.getAccessibleContext().setAccessibleName("c");
        v.getAccessibleContext().setAccessibleName("v");
        b.getAccessibleContext().setAccessibleName("b");
        n.getAccessibleContext().setAccessibleName("n");
        m.getAccessibleContext().setAccessibleName("m");
        enter.getAccessibleContext().setAccessibleName("enter");
        del.getAccessibleContext().setAccessibleName("del");

        getContentPane().add(typePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 530, -1, -1));

        topPanel.setBackground(new java.awt.Color(255, 255, 255));
        topPanel.setPreferredSize(new java.awt.Dimension(480, 50));
        topPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        back.setBackground(new java.awt.Color(204, 204, 204));
        back.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 18)); // NOI18N
        back.setForeground(new java.awt.Color(0, 0, 0));
        back.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        back.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        back.setPreferredSize(new java.awt.Dimension(50, 50));
        back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                backMouseReleased(evt);
            }
        });
        topPanel.add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, -1, -1));

        wordle.setBackground(new java.awt.Color(204, 204, 204));
        wordle.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 18)); // NOI18N
        wordle.setForeground(new java.awt.Color(0, 0, 0));
        wordle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        wordle.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        wordle.setPreferredSize(new java.awt.Dimension(50, 50));
        wordle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                wordleMouseReleased(evt);
            }
        });
        topPanel.add(wordle, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 0, -1, -1));

        stat.setBackground(new java.awt.Color(204, 204, 204));
        stat.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 18)); // NOI18N
        stat.setForeground(new java.awt.Color(0, 0, 0));
        stat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        stat.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        stat.setPreferredSize(new java.awt.Dimension(50, 50));
        stat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                statMouseReleased(evt);
            }
        });
        topPanel.add(stat, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 0, -1, -1));

        getContentPane().add(topPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void initButton() {
        /*a.setIcon(new ImageIcon("image\\button\\keyboard\\button_a.png"));
        b.setIcon(new ImageIcon("image\\button\\keyboard\\button_b.png"));
        c.setIcon(new ImageIcon("image\\button\\keyboard\\button_c.png"));
        d.setIcon(new ImageIcon("image\\button\\keyboard\\button_d.png"));
        e.setIcon(new ImageIcon("image\\button\\keyboard\\button_e.png"));
        f.setIcon(new ImageIcon("image\\button\\keyboard\\button_f.png"));
        g.setIcon(new ImageIcon("image\\button\\keyboard\\button_g.png"));
        h.setIcon(new ImageIcon("image\\button\\keyboard\\button_h.png"));
        i.setIcon(new ImageIcon("image\\button\\keyboard\\button_i.png"));
        j.setIcon(new ImageIcon("image\\button\\keyboard\\button_j.png"));
        k.setIcon(new ImageIcon("image\\button\\keyboard\\button_k.png"));
        l.setIcon(new ImageIcon("image\\button\\keyboard\\button_l.png"));
        m.setIcon(new ImageIcon("image\\button\\keyboard\\button_m.png"));
        n.setIcon(new ImageIcon("image\\button\\keyboard\\button_n.png"));
        o.setIcon(new ImageIcon("image\\button\\keyboard\\button_o.png"));
        p.setIcon(new ImageIcon("image\\button\\keyboard\\button_p.png"));
        q.setIcon(new ImageIcon("image\\button\\keyboard\\button_q.png"));
        r.setIcon(new ImageIcon("image\\button\\keyboard\\button_r.png"));
        s.setIcon(new ImageIcon("image\\button\\keyboard\\button_s.png"));
        t.setIcon(new ImageIcon("image\\button\\keyboard\\button_t.png"));
        u.setIcon(new ImageIcon("image\\button\\keyboard\\button_u.png"));
        v.setIcon(new ImageIcon("image\\button\\keyboard\\button_v.png"));
        w.setIcon(new ImageIcon("image\\button\\keyboard\\button_w.png"));
        x.setIcon(new ImageIcon("image\\button\\keyboard\\button_x.png"));
        y.setIcon(new ImageIcon("image\\button\\keyboard\\button_y.png"));
        z.setIcon(new ImageIcon("image\\button\\keyboard\\button_z.png"));
        enter.setIcon(new ImageIcon("image\\button\\keyboard\\button_enter.png"));
        del.setIcon(new ImageIcon("image\\button\\keyboard\\button_del.png"));*/
        wordle.setIcon(new ImageIcon("image\\button\\button0_w.png"));
        back.setIcon(new ImageIcon("image\\button\\button0_back.png"));
        stat.setIcon(new ImageIcon("image\\button\\button0_stat.png"));
        resetStat.setIcon(new ImageIcon("image\\button\\button0_delete.png"));
        playAgain.setIcon(new ImageIcon("image\\button\\button0_restart.png"));
        resume.setIcon(new ImageIcon("image\\button\\button0_closePage.png"));
    }

    private void qMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_qMouseReleased
        // TODO add your handling code here:
        ComponentInteract.performNextTile("Q", evt, mode);
    }//GEN-LAST:event_qMouseReleased

    private void wMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_wMouseReleased
        // TODO add your handling code here:
        ComponentInteract.performNextTile("W", evt, mode);
    }//GEN-LAST:event_wMouseReleased

    private void eMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eMouseReleased
        // TODO add your handling code here:
        ComponentInteract.performNextTile("E", evt, mode);
    }//GEN-LAST:event_eMouseReleased

    private void rMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rMouseReleased
        // TODO add your handling code here:
        ComponentInteract.performNextTile("R", evt, mode);
    }//GEN-LAST:event_rMouseReleased

    private void tMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tMouseReleased
        // TODO add your handling code here:
        ComponentInteract.performNextTile("T", evt, mode);
    }//GEN-LAST:event_tMouseReleased

    private void yMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_yMouseReleased
        // TODO add your handling code here:
        ComponentInteract.performNextTile("Y", evt, mode);
    }//GEN-LAST:event_yMouseReleased

    private void uMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_uMouseReleased
        // TODO add your handling code here:
        ComponentInteract.performNextTile("U", evt, mode);
    }//GEN-LAST:event_uMouseReleased

    private void iMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iMouseReleased
        // TODO add your handling code here:
        ComponentInteract.performNextTile("I", evt, mode);
    }//GEN-LAST:event_iMouseReleased

    private void oMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_oMouseReleased
        // TODO add your handling code here:
        ComponentInteract.performNextTile("O", evt, mode);
    }//GEN-LAST:event_oMouseReleased

    private void pMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pMouseReleased
        // TODO add your handling code here:
        ComponentInteract.performNextTile("P", evt, mode);
    }//GEN-LAST:event_pMouseReleased

    private void aMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aMouseReleased
        // TODO add your handling code here:
        ComponentInteract.performNextTile("A", evt, mode);
    }//GEN-LAST:event_aMouseReleased

    private void sMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sMouseReleased
        // TODO add your handling code here:
        ComponentInteract.performNextTile("S", evt, mode);
    }//GEN-LAST:event_sMouseReleased

    private void dMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dMouseReleased
        // TODO add your handling code here:
        ComponentInteract.performNextTile("D", evt, mode);
    }//GEN-LAST:event_dMouseReleased

    private void fMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fMouseReleased
        // TODO add your handling code here:
        ComponentInteract.performNextTile("F", evt, mode);
    }//GEN-LAST:event_fMouseReleased

    private void gMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gMouseReleased
        // TODO add your handling code here:
        ComponentInteract.performNextTile("G", evt, mode);
    }//GEN-LAST:event_gMouseReleased

    private void hMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hMouseReleased
        // TODO add your handling code here:
        ComponentInteract.performNextTile("H", evt, mode);
    }//GEN-LAST:event_hMouseReleased

    private void jMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMouseReleased
        // TODO add your handling code here:
        ComponentInteract.performNextTile("J", evt, mode);
    }//GEN-LAST:event_jMouseReleased

    private void kMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kMouseReleased
        // TODO add your handling code here:
        ComponentInteract.performNextTile("K", evt, mode);
    }//GEN-LAST:event_kMouseReleased

    private void lMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lMouseReleased
        // TODO add your handling code here:
        ComponentInteract.performNextTile("L", evt, mode);
    }//GEN-LAST:event_lMouseReleased

    private void zMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_zMouseReleased
        // TODO add your handling code here:
        ComponentInteract.performNextTile("Z", evt, mode);
    }//GEN-LAST:event_zMouseReleased

    private void xMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_xMouseReleased
        // TODO add your handling code here:
        ComponentInteract.performNextTile("X", evt, mode);
    }//GEN-LAST:event_xMouseReleased

    private void cMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cMouseReleased
        // TODO add your handling code here:
        ComponentInteract.performNextTile("C", evt, mode);
    }//GEN-LAST:event_cMouseReleased

    private void vMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vMouseReleased
        // TODO add your handling code here:
        ComponentInteract.performNextTile("V", evt, mode);
    }//GEN-LAST:event_vMouseReleased

    private void bMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bMouseReleased
        // TODO add your handling code here:
        ComponentInteract.performNextTile("B", evt, mode);
    }//GEN-LAST:event_bMouseReleased

    private void nMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nMouseReleased
        // TODO add your handling code here:
        ComponentInteract.performNextTile("N", evt, mode);
    }//GEN-LAST:event_nMouseReleased

    private void mMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mMouseReleased
        // TODO add your handling code here:
        ComponentInteract.performNextTile("M", evt, mode);
    }//GEN-LAST:event_mMouseReleased

    private void enterMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enterMouseReleased
        // TODO add your handling code here:
        if (!mode.isDone()) {
            ComponentInteract.performCheckTile(evt, mode);
        }
        updateScore();
    }//GEN-LAST:event_enterMouseReleased

    private void delMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_delMouseReleased
        // TODO add your handling code here:
        ComponentInteract.performDelTile(evt, mode);
    }//GEN-LAST:event_delMouseReleased

    private void wordleMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_wordleMouseReleased
        // TODO add your handling code here:
        Sound.getSound("audio\\uiSound\\minecraftClick.wav").start();
        ComponentInteract.performMainMenu(this, evt);
    }//GEN-LAST:event_wordleMouseReleased

    private void backMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backMouseReleased
        // TODO add your handling code here:
        Sound.getSound("audio\\uiSound\\minecraftClick.wav").start();
        ComponentInteract.performModeChoose(this, evt);
    }//GEN-LAST:event_backMouseReleased

    private void statMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_statMouseReleased
        // TODO add your handling code here:
        Sound.getSound("audio\\uiSound\\minecraftClick.wav").start();
        ComponentInteract.performStat(this, statPanel, evt);
    }//GEN-LAST:event_statMouseReleased

    private void playAgainMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_playAgainMouseReleased
        // TODO add your handling code here:
        Sound.getSound("audio\\uiSound\\minecraftClick.wav").start();
        ComponentInteract.performGameScreen(tiles[0].length, tiles.length, this, evt);
    }//GEN-LAST:event_playAgainMouseReleased

    private void resumeMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resumeMouseReleased
        // TODO add your handling code here:
        Sound.getSound("audio\\uiSound\\minecraftClick.wav").start();
        ComponentInteract.performCloseStat(statPanel, evt);
    }//GEN-LAST:event_resumeMouseReleased

    private void resetStatMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetStatMouseReleased
        // TODO add your handling code here:
        Sound.getSound("audio\\uiSound\\minecraftClick.wav").start();
        ComponentInteract.performConfirm(confirmResetPanel, evt);
    }//GEN-LAST:event_resetStatMouseReleased

    private void yesMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_yesMouseReleased
        // TODO add your handling code here:
        Sound.getSound("audio\\uiSound\\minecraftClick.wav").start();
        ComponentInteract.performResetScore(this, confirmResetPanel, score, evt);
    }//GEN-LAST:event_yesMouseReleased

    private void cancelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelMouseReleased
        // TODO add your handling code here:
        Sound.getSound("audio\\uiSound\\minecraftClick.wav").start();
        ComponentInteract.performCloseConfirm(confirmResetPanel, evt);
    }//GEN-LAST:event_cancelMouseReleased

    private void jLabel1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseReleased
        // TODO add your handling code here:
        Sound.getSound("audio\\uiSound\\caveAmbience.wav").start();
        ComponentInteract.performCheat(warning, mode, evt);
    }//GEN-LAST:event_jLabel1MouseReleased

    private void photoFrameMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_photoFrameMouseReleased
        // TODO add your handling code here:
        ComponentInteract.performSelfClose(photoFrame, evt);
    }//GEN-LAST:event_photoFrameMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("FlatLaf Light".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameScreen(5, 6).setVisible(true);
            }
        });
    }

    public void createKeyInteract() {
        typeAction = new TypeAction();
        delAction = new DelAction();
        enterAction = new EnterAction();
        topPanel.getInputMap().put(KeyStroke.getKeyStroke("A"), "type");
        topPanel.getInputMap().put(KeyStroke.getKeyStroke("B"), "type");
        topPanel.getInputMap().put(KeyStroke.getKeyStroke("C"), "type");
        topPanel.getInputMap().put(KeyStroke.getKeyStroke("D"), "type");
        topPanel.getInputMap().put(KeyStroke.getKeyStroke("E"), "type");
        topPanel.getInputMap().put(KeyStroke.getKeyStroke("F"), "type");
        topPanel.getInputMap().put(KeyStroke.getKeyStroke("G"), "type");
        topPanel.getInputMap().put(KeyStroke.getKeyStroke("H"), "type");
        topPanel.getInputMap().put(KeyStroke.getKeyStroke("I"), "type");
        topPanel.getInputMap().put(KeyStroke.getKeyStroke("J"), "type");
        topPanel.getInputMap().put(KeyStroke.getKeyStroke("K"), "type");
        topPanel.getInputMap().put(KeyStroke.getKeyStroke("L"), "type");
        topPanel.getInputMap().put(KeyStroke.getKeyStroke("M"), "type");
        topPanel.getInputMap().put(KeyStroke.getKeyStroke("N"), "type");
        topPanel.getInputMap().put(KeyStroke.getKeyStroke("O"), "type");
        topPanel.getInputMap().put(KeyStroke.getKeyStroke("P"), "type");
        topPanel.getInputMap().put(KeyStroke.getKeyStroke("Q"), "type");
        topPanel.getInputMap().put(KeyStroke.getKeyStroke("R"), "type");
        topPanel.getInputMap().put(KeyStroke.getKeyStroke("S"), "type");
        topPanel.getInputMap().put(KeyStroke.getKeyStroke("T"), "type");
        topPanel.getInputMap().put(KeyStroke.getKeyStroke("U"), "type");
        topPanel.getInputMap().put(KeyStroke.getKeyStroke("V"), "type");
        topPanel.getInputMap().put(KeyStroke.getKeyStroke("W"), "type");
        topPanel.getInputMap().put(KeyStroke.getKeyStroke("X"), "type");
        topPanel.getInputMap().put(KeyStroke.getKeyStroke("Y"), "type");
        topPanel.getInputMap().put(KeyStroke.getKeyStroke("Z"), "type");
        topPanel.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_BACK_SPACE, 0), "del");
        topPanel.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), "enter");
        topPanel.getActionMap().put("type", typeAction);
        topPanel.getActionMap().put("del", delAction);
        topPanel.getActionMap().put("enter", enterAction);
    }

    public void createNumTry() {
        numTry = new JLabel[9];
        for (int i = 0; i < numTry.length; i++) {
            numTry[i] = new JLabel();
            numTry[i].setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
            numTry[i].setForeground(new java.awt.Color(0, 0, 0));
            numTry[i].setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            numTry[i].setText(String.valueOf(i + 1));
            numTry[i].setPreferredSize(new java.awt.Dimension(15, 15));
            statPanel.add(numTry[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(30, i * 20 + 210, -1, -1));
        }
    }

    public void createDisBar() {
        disBar = new JProgressBar[9];
        for (int i = 0; i < disBar.length; i++) {
            disBar[i] = new JProgressBar();
            disBar[i].setBackground(new java.awt.Color(231, 231, 231));
            disBar[i].setForeground(new java.awt.Color(102, 102, 102));
            disBar[i].setMinimum(-10);
            disBar[i].setPreferredSize(new java.awt.Dimension(220, 15));
            statPanel.add(disBar[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(50, i * 20 + 210, -1, -1));
        }
    }

    public void createTiles(int numOfLetter, int numOfAttemp) {
        tiles = new JLabel[numOfAttemp][numOfLetter];

        for (int i = 0; i < numOfAttemp; i++) {
            for (int j = 0; j < numOfLetter; j++) {
                tiles[i][j] = new JLabel();
                tiles[i][j].setFont(new java.awt.Font("Franklin Gothic Medium", 1, 38)); // NOI18N
                tiles[i][j].setForeground(new java.awt.Color(0, 0, 0));
                tiles[i][j].setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                tiles[i][j].setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 2));

                int tileSize = calTileSize(numOfLetter, numOfAttemp);
                int posX = tilesPosFunc(numOfLetter, tileSize, GAP_SIZE, j);
                int posY = tilesPosFunc(numOfAttemp, tileSize, GAP_SIZE, i);
                tiles[i][j].setPreferredSize(new java.awt.Dimension(tileSize, tileSize));
                tilePanel.add(tiles[i][j]);
                tiles[i][j].setBounds(posX, posY, tileSize, tileSize);
            }
        }
    }

    public void updateScore() {
        playedValue.setText(String.valueOf(score.getTotalPlay()));
        winPercentValue.setText(String.valueOf(score.getWinRate()));
        currentStreakValue.setText(String.valueOf(score.getCurrentStreak()));
        maxStreakValue.setText(String.valueOf(score.getMaxStreak()));
        for (int i = 0; i < disBar.length; i++) {
            if (score.getMostTry() > 0 && score.getTryWin(i) > 0) {
                disBar[i].setMaximum(score.getMostTry());
                disBar[i].setValue(score.getTryWin(i));
            } else {
                disBar[i].setMaximum(100);
                disBar[i].setValue(0);
            }
        }

    }

    public int calTileSize(int numOfLetters, int numOfAttemps) {
        if (numOfLetters < 7 && numOfAttemps < 8) {
            return BIG_SIZE;
        } else {
            return SMALL_SIZE;
        }
    }

    public int calAllTileLen(int numOfTiles, int tileSize, int gapSize) {
        int tilesLen = numOfTiles * tileSize;
        //System.out.println("tilesLen: " + tilesLen);
        //System.out.println("Length: " + (numOfTiles * tileSize + (numOfTiles - 1) * gapSize));
        return numOfTiles * tileSize + (numOfTiles - 1) * gapSize;
    }

    public int calStartTilesPos(int numOfTiles, int tileSize, int gapSize) {
        int halfOfScreenWidth = getWidth() / 2 - 8;
        int halfOfLen = calAllTileLen(numOfTiles, tileSize, gapSize) / 2;
        //System.out.println("Half screen: " + halfOfScreenWidth);
        //System.out.println("Half len: " + halfOfLen);
        //System.out.println("Start pos: " + (halfOfScreenWidth - halfOfLen));
        return halfOfScreenWidth - calAllTileLen(numOfTiles, tileSize, gapSize) / 2;
    }

    public int tilesPosFunc(int numOfTiles, int tileSize, int gapSize, int index) {
        //System.out.println("Tile pos right now: " + (index * (tileSize + gapSize) + calStartTilesPos(numOfTiles, tileSize, gapSize)));
        return index * (tileSize + gapSize) + calStartTilesPos(numOfTiles, tileSize, gapSize);
    }

    public class TypeAction extends AbstractAction {

        public void actionPerformed(ActionEvent e) {
            //System.out.println(e.getActionCommand());
            warning.setVisible(false);
            mode.nextTile(e.getActionCommand());
        }
    }

    public class EnterAction extends AbstractAction {

        public void actionPerformed(ActionEvent e) {
            //System.out.println("Enter");
            if (!mode.isDone()) {
                mode.checkTile();
            }
            updateScore();
        }
    }

    public class DelAction extends AbstractAction {

        public void actionPerformed(ActionEvent e) {
            //System.out.println("Del");
            warning.setVisible(false);
            mode.delTile();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel a;
    private javax.swing.JLabel areYouSure;
    private javax.swing.JLabel b;
    private javax.swing.JLabel back;
    private javax.swing.JLabel c;
    private javax.swing.JLabel cancel;
    private javax.swing.JPanel confirmResetPanel;
    private javax.swing.JLabel current;
    private javax.swing.JLabel currentStreakValue;
    private javax.swing.JLabel d;
    private javax.swing.JLabel del;
    private javax.swing.JLabel e;
    private javax.swing.JLabel enter;
    private javax.swing.JLabel f;
    private javax.swing.JLabel g;
    private javax.swing.JLabel guessDis;
    private javax.swing.JLabel h;
    private javax.swing.JLabel i;
    private javax.swing.JLabel j;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel k;
    private javax.swing.JLabel l;
    private javax.swing.JLabel m;
    private javax.swing.JLabel max;
    private javax.swing.JLabel maxStreakValue;
    private javax.swing.JLabel n;
    private javax.swing.JLabel o;
    private javax.swing.JLabel p;
    private javax.swing.JLabel photoFrame;
    private javax.swing.JLabel playAgain;
    private javax.swing.JLabel played;
    private javax.swing.JLabel playedValue;
    private javax.swing.JLabel q;
    private javax.swing.JLabel r;
    private javax.swing.JLabel resetStat;
    private javax.swing.JLabel resume;
    private javax.swing.JLabel s;
    private javax.swing.JLabel stat;
    private javax.swing.JPanel statPanel;
    private javax.swing.JLabel statistic;
    private javax.swing.JLabel streak;
    private javax.swing.JLabel streak2;
    private javax.swing.JLabel t;
    private javax.swing.JPanel tilePanel;
    private javax.swing.JPanel topPanel;
    private javax.swing.JPanel typePanel;
    private javax.swing.JLabel u;
    private javax.swing.JLabel v;
    private javax.swing.JLabel w;
    private javax.swing.JLabel warning;
    private javax.swing.JLabel winPercent;
    private javax.swing.JLabel winPercentValue;
    private javax.swing.JLabel wordle;
    private javax.swing.JLabel x;
    private javax.swing.JLabel y;
    private javax.swing.JLabel yes;
    private javax.swing.JLabel yourStat;
    private javax.swing.JLabel z;
    // End of variables declaration//GEN-END:variables
}
